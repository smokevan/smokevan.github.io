{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Main,Expertise,Project,Contact,Navigation,Footer}from\"./components\";import Documentation from'./components/Documentation';import FadeIn from'./components/FadeIn';import'./index.scss';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('dark');const[hash,setHash]=useState(typeof window!=='undefined'?window.location.hash:'');const handleModeChange=()=>{if(mode==='dark'){setMode('light');}else{setMode('dark');}};useEffect(()=>{window.scrollTo({top:0,left:0,behavior:'smooth'});},[]);useEffect(()=>{const onHash=()=>setHash(window.location.hash||'');window.addEventListener('hashchange',onHash);return()=>window.removeEventListener('hashchange',onHash);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container \".concat(mode==='dark'?'dark-mode':'light-mode'),children:[/*#__PURE__*/_jsx(Navigation,{parentToChild:{mode},modeChange:handleModeChange}),/*#__PURE__*/_jsx(FadeIn,{transitionDuration:700,children:hash.startsWith('#/docs/')?(()=>{const parts=hash.replace(/^#\\/?/,'').split('/');const id=parts.length>1?parts[1]:parts[0];return/*#__PURE__*/_jsx(Documentation,{projectId:id});})():/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Main,{}),/*#__PURE__*/_jsx(Expertise,{}),/*#__PURE__*/_jsx(Project,{}),/*#__PURE__*/_jsx(Contact,{})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Main","Expertise","Project","Contact","Navigation","Footer","Documentation","FadeIn","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","hash","setHash","window","location","handleModeChange","scrollTo","top","left","behavior","onHash","addEventListener","removeEventListener","className","concat","children","parentToChild","modeChange","transitionDuration","startsWith","parts","replace","split","id","length","projectId"],"sources":["/Users/ivanmokeyev/Documents/Eng Projects/smokevan.github.io/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n    Main,\n    Expertise,\n    Project,\n    Contact,\n    Navigation,\n    Footer,\n} from \"./components\";\nimport Documentation from './components/Documentation';\nimport FadeIn from './components/FadeIn';\nimport './index.scss';\n\nfunction App() {\n    const [mode, setMode] = useState<string>('dark');\n    const [hash, setHash] = useState<string>(typeof window !== 'undefined' ? window.location.hash : '');\n\n    const handleModeChange = () => {\n        if (mode === 'dark') {\n            setMode('light');\n        } else {\n            setMode('dark');\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo({top: 0, left: 0, behavior: 'smooth'});\n      }, []);\n\n        useEffect(() => {\n            const onHash = () => setHash(window.location.hash || '');\n            window.addEventListener('hashchange', onHash);\n            return () => window.removeEventListener('hashchange', onHash);\n        }, []);\n\n    return (\n    <div className={`main-container ${mode === 'dark' ? 'dark-mode' : 'light-mode'}`}>\n        <Navigation parentToChild={{mode}} modeChange={handleModeChange}/>\n                <FadeIn transitionDuration={700}>\n                        {hash.startsWith('#/docs/') ? (\n                            (() => {\n                                const parts = hash.replace(/^#\\/?/, '').split('/');\n                                const id = parts.length > 1 ? parts[1] : parts[0];\n                                return <Documentation projectId={id} />;\n                            })()\n                        ) : (\n                            <>\n                                <Main/>\n                                <Expertise/>\n                                <Project/>\n                                <Contact/>\n                            </>\n                        )}\n                </FadeIn>\n        <Footer />\n    </div>\n    );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OACIC,IAAI,CACJC,SAAS,CACTC,OAAO,CACPC,OAAO,CACPC,UAAU,CACVC,MAAM,KACH,cAAc,CACrB,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAS,MAAM,CAAC,CAChD,KAAM,CAACmB,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAS,MAAO,CAAAqB,MAAM,GAAK,WAAW,CAAGA,MAAM,CAACC,QAAQ,CAACH,IAAI,CAAG,EAAE,CAAC,CAEnG,KAAM,CAAAI,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,GAAIN,IAAI,GAAK,MAAM,CAAE,CACjBC,OAAO,CAAC,OAAO,CAAC,CACpB,CAAC,IAAM,CACHA,OAAO,CAAC,MAAM,CAAC,CACnB,CACJ,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACZoB,MAAM,CAACG,QAAQ,CAAC,CAACC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEC,QAAQ,CAAE,QAAQ,CAAC,CAAC,CACxD,CAAC,CAAE,EAAE,CAAC,CAEJ1B,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA2B,MAAM,CAAGA,CAAA,GAAMR,OAAO,CAACC,MAAM,CAACC,QAAQ,CAACH,IAAI,EAAI,EAAE,CAAC,CACxDE,MAAM,CAACQ,gBAAgB,CAAC,YAAY,CAAED,MAAM,CAAC,CAC7C,MAAO,IAAMP,MAAM,CAACS,mBAAmB,CAAC,YAAY,CAAEF,MAAM,CAAC,CACjE,CAAC,CAAE,EAAE,CAAC,CAEV,mBACAb,KAAA,QAAKgB,SAAS,mBAAAC,MAAA,CAAoBf,IAAI,GAAK,MAAM,CAAG,WAAW,CAAG,YAAY,CAAG,CAAAgB,QAAA,eAC7EtB,IAAA,CAACL,UAAU,EAAC4B,aAAa,CAAE,CAACjB,IAAI,CAAE,CAACkB,UAAU,CAAEZ,gBAAiB,CAAC,CAAC,cAC1DZ,IAAA,CAACF,MAAM,EAAC2B,kBAAkB,CAAE,GAAI,CAAAH,QAAA,CACvBd,IAAI,CAACkB,UAAU,CAAC,SAAS,CAAC,CACvB,CAAC,IAAM,CACH,KAAM,CAAAC,KAAK,CAAGnB,IAAI,CAACoB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAClD,KAAM,CAAAC,EAAE,CAAGH,KAAK,CAACI,MAAM,CAAG,CAAC,CAAGJ,KAAK,CAAC,CAAC,CAAC,CAAGA,KAAK,CAAC,CAAC,CAAC,CACjD,mBAAO3B,IAAA,CAACH,aAAa,EAACmC,SAAS,CAAEF,EAAG,CAAE,CAAC,CAC3C,CAAC,EAAE,CAAC,cAEJ1B,KAAA,CAAAF,SAAA,EAAAoB,QAAA,eACItB,IAAA,CAACT,IAAI,GAAC,CAAC,cACPS,IAAA,CAACR,SAAS,GAAC,CAAC,cACZQ,IAAA,CAACP,OAAO,GAAC,CAAC,cACVO,IAAA,CAACN,OAAO,GAAC,CAAC,EACZ,CACL,CACD,CAAC,cACjBM,IAAA,CAACJ,MAAM,GAAE,CAAC,EACT,CAAC,CAEV,CAEA,cAAe,CAAAS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}